# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateEventInput {
  eventComment: String
  eventName: String!
  eventType: String!
  targetDate: DateTime!
  userId: String!
}

input CreateOrderInput {
  initialComment: String
  initialCost: String!
  initialPhotos: String
  leftHeadlamp: [String!]
  orderName: String!
  rightHeadlamp: [String!]
  sparePartsCost: String
}

input CreateUserInput {
  email: String!
  password: String!
  roles: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Event {
  createdAt: DateTime!
  eventComment: String
  eventName: String!
  eventType: String!
  id: String!
  targetDate: DateTime!
  updatedAt: DateTime!
  userId: String!
}

type LoginResponse {
  access_token: String!
  user: User!
}

input LoginUserInput {
  password: String!
  username: String!
}

type Mutation {
  createEvent(createEventInput: CreateEventInput!): Event!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  removeEvent(id: String!): Event!
  removeEvents(ids: [String!]!): [Event!]!
  removeOrder(id: String!): Order!
  removeOrders(ids: [String!]!): [Order!]!
  removeUser(id: String!): User!
  removeUsers(ids: [String!]!): [User!]!
  signup(createUserInput: CreateUserInput!): User!
  updateEvent(updateEventInput: UpdateEventInput!): Event!
  updateOrder(updateOrderInput: UpdateOrderInput!): Order!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Order {
  createdAt: DateTime!
  id: String!
  initialComment: String
  initialCost: String!
  initialPhotos: String
  leftHeadlamp: [String!]!
  orderName: String!
  releaseDate: DateTime
  rightHeadlamp: [String!]!
  sparePartsCost: String!
  totalCost: String!
  updatedAt: DateTime!
}

type Query {
  getEvent(id: String!): Event!
  getEvents: [Event!]!
  getEventsByUserId(userId: String!): [Event!]!
  order(id: String!): Order!
  orders: [Order!]!
  user(id: String!): User!
  users: [User!]!
}

input UpdateEventInput {
  eventComment: String
  eventName: String
  eventType: String
  id: String!
  targetDate: DateTime
  userId: String
}

input UpdateOrderInput {
  id: String!
  initialComment: String
  initialCost: String
  initialPhotos: String
  leftHeadlamp: [String!]
  orderName: String
  rightHeadlamp: [String!]
  sparePartsCost: String
}

input UpdateUserInput {
  email: String
  id: String!
  password: String
  roles: String
  username: String
}

type User {
  email: String!
  id: String!
  roles: String!
  username: String!
}